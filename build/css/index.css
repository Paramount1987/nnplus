/* gulp.spritesmith v6.2.1 */
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
/*
The `retina-sprite` mixin sets up rules and a media query for a sprite/retina sprite.
  It should be used with a "retina group" variable.

The media query is from CSS Tricks: https://css-tricks.com/snippets/css/retina-display-media-query/

$icon-home-group: ('icon-home', $icon-home, $icon-home-2x, );

.icon-home {
  @include retina-sprite($icon-home-group);
}
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
/*
The `retina-sprites` mixin generates a CSS rule and media query for retina groups
  This yields the same output as CSS retina template but can be overridden in SCSS

@include retina-sprites($retina-groups);
*/
/* normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  position: relative;
  margin: 0;
  min-height: 550px; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block; }

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none; }

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  outline: none; }

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold; }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

@font-face {
  font-family: "Futura New Demi";
  font-style: normal;
  font-weight: 400;
  src: url("../fonts/futuranewdemi/FuturaNewDemi-Reg.eot?") format("eot"), url("../fonts/futuranewdemi/FuturaNewDemi-Reg.woff2") format("woff2"), url("../fonts/futuranewdemi/FuturaNewDemi-Reg.woff") format("woff"), url("../fonts/futuranewdemi/FuturaNewDemi-Reg.ttf") format("truetype"), url("../fonts/futuranewdemi/FuturaNewDemi-Reg.svg#Futura_New_Demi") format("svg"); }

html {
  position: relative;
  height: 100%;
  box-sizing: border-box;
  font-size: 16px;
  -webkit-tap-highlight-color: transparent; }

body {
  height: 100%;
  background: #d6d6d6;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: 16px;
  line-height: 1.4;
  color: #ffffff; }

*,
*::before,
*::after {
  box-sizing: inherit; }

h3, .h3 {
  font-family: 'Futura New Demi';
  font-size: 24px;
  font-weight: normal; }

h4, .h4 {
  font-family: 'Futura New Demi';
  font-size: 22px;
  font-weight: normal; }

.link-default {
  font-size: 16px;
  color: #fff;
  text-decoration: none; }

.bg-green {
  background-color: #009685; }

.bg-green-light {
  background-color: #e4f2ee; }

.color-weak {
  color: rgba(255, 255, 255, 0.6); }

.color-gray {
  color: #95989a; }

.text-sm {
  font-size: 12px; }

.text-dark {
  color: #000; }

.list-default {
  margin: 0;
  padding: 0;
  list-style: none; }

.btn {
  display: block;
  width: 100%;
  line-height: 50px;
  border-radius: 2px;
  background-color: transparent;
  font-family: 'Futura New Demi';
  font-size: 22px;
  text-align: center;
  text-decoration: none;
  transition: all linear .2s;
  cursor: pointer; }

.btn-sm {
  line-height: 35px; }

.btn-default {
  color: #fff;
  border: solid 1px #fff;
  background-color: #009685; }
  .btn-default:hover {
    background-color: #fff;
    border-color: #009685;
    color: #009685; }

.btn-invert {
  font-size: 18px;
  color: #fff;
  border: solid 1px #009685;
  background-color: #009685; }

.btn-green {
  font-size: 17px;
  color: #009685;
  border: solid 1px #009685; }
  .btn-green:hover {
    background-color: #009685;
    border-color: #fff;
    color: #fff; }

.btn-group {
  margin-top: 30px; }
  .btn-group .btn {
    display: inline-block;
    width: auto;
    padding: 0 12px;
    margin-left: 18px;
    vertical-align: top; }
  .btn-group .btn:first-child {
    margin-left: 0; }
  .btn-group--flexbox {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between; }
    .btn-group--flexbox .btn {
      width: 45%;
      font-size: 16px; }

.float-right {
  float: right; }

.visible-sx {
  display: block !important; }
  @media (min-width: 520px) {
    .visible-sx {
      display: none !important; } }

.visible-sm {
  display: none !important; }
  @media (min-width: 520px) {
    .visible-sm {
      display: block !important; } }

.visible-xl {
  display: none !important; }
  @media (min-width: 1160px) {
    .visible-xl {
      display: block !important; } }

.list-analysis li {
  margin-bottom: 12px; }

.nn-analysis {
  position: relative;
  z-index: 1;
  padding: 8px 20px;
  background-color: #fff;
  border-radius: 2px;
  border: solid 1px #ebebeb;
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.15);
  color: #000; }
  .nn-analysis:hover {
    -webkit-animation: animationBg 1.5s;
    animation: animationBg 1.5s; }

@-webkit-keyframes animationBg {
  0% {
    background-color: #fff; }
  50% {
    background-color: #edf7fd; }
  100% {
    background-color: #fff; } }

@keyframes animationBg {
  0% {
    background-color: #fff; }
  50% {
    background-color: #edf7fd; }
  100% {
    background-color: #fff; } }

.nn-analysis__control {
  position: absolute;
  z-index: 10;
  top: 8px;
  right: 0;
  width: 10px;
  height: 20px;
  cursor: pointer; }
  .nn-analysis__control i {
    display: block;
    width: 4px;
    height: 4px;
    margin-bottom: 3px;
    border-radius: 4px;
    background-color: #95989a; }

.analysis-date {
  font-size: 11px; }

.analysis-name {
  margin: 0 0 20px 0;
  font-size: 16px;
  font-weight: normal;
  color: #009685; }

.analysis-status {
  font-size: 9px;
  color: #95989a; }

.nn-analysis__remove {
  position: absolute;
  z-index: 9;
  top: 3px;
  right: 20px;
  display: none;
  width: 145px;
  padding: 6px 6px 6px 30px;
  background-color: #f5f8fa;
  border-radius: 2px;
  font-size: 12px;
  color: rgba(0, 0, 0, 0.66);
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.15);
  cursor: pointer; }
  .nn-analysis__remove.is-active {
    display: block; }
  .nn-analysis__remove .icon-garbage {
    position: absolute;
    z-index: 10;
    top: 50%;
    left: 6px;
    margin-top: -9px; }

.icon-garbage {
  display: block;
  width: 16px;
  height: 17px;
  background: url("../img/svg/garbage.svg") no-repeat;
  background-size: cover; }

@media (min-width: 800px) {
  .analysis-page {
    padding: 0 20px; } }

.analysis-page__top {
  background-color: #e4f2ee;
  padding: 15px;
  text-align: right; }
  .analysis-page__top .btn {
    display: inline-block;
    width: auto;
    padding: 0 20px;
    text-align: center;
    font-size: 17px;
    line-height: 35px; }
  @media (min-width: 800px) {
    .analysis-page__top {
      padding: 15px 0; } }

.analysis-page__content {
  background-color: #fff;
  padding: 20px;
  color: #000; }
  .analysis-page__content h3, .analysis-page__content .h3 {
    margin: 0 0 25px 0;
    font-size: 26px; }

.article {
  font-size: 18px; }
  .article p {
    margin: 10px 0; }
  .article .btn {
    margin-top: 45px; }

.article-footer {
  padding-top: 45px; }

footer {
  position: absolute;
  z-index: 20;
  left: 0;
  bottom: 0;
  width: 100%;
  display: none; }
  @media (min-width: 520px) {
    footer {
      display: block; } }

.footer-inner {
  max-width: 770px;
  margin: 0 auto;
  padding: 30px; }

.footer-nav {
  margin: 0;
  padding: 0;
  list-style: none; }
  .footer-nav li {
    display: inline-block;
    margin-right: 25px; }
    .footer-nav li:last-child {
      margin-right: 0; }

.footer-nav__link {
  font-size: 16px;
  color: rgba(255, 255, 255, 0.7);
  text-decoration: none;
  transition: color .2s linear; }
  .footer-nav__link:hover {
    color: #fff; }

.bg-green-light .footer-nav__link {
  color: rgba(116, 116, 116, 0.7); }
  .bg-green-light .footer-nav__link:hover {
    color: #747474; }

.nn-form {
  max-width: 420px;
  font-size: 18px; }
  .nn-form h3, .nn-form .h3 {
    margin: 0 0 35px 0; }
  .nn-form label {
    display: block;
    margin-bottom: 18px; }
    .nn-form label.label-sm {
      font-size: 14px;
      margin-bottom: 5px; }
    .nn-form label.label-lg {
      font-family: 'Futura New Demi';
      font-size: 22px; }

.form-group {
  margin-bottom: 5px; }
  .form-group--bottom {
    margin-bottom: 12px; }
  .form-group--bottom-lg {
    margin-bottom: 22px; }
  .form-group--bottom-x-lg {
    margin-bottom: 30px; }

.form-control__wrap-phone {
  position: relative;
  z-index: 1; }

.form-control {
  display: block;
  width: 100%;
  border: none;
  border-radius: 2px;
  background-color: #fff;
  line-height: 40px;
  padding: 0 10px;
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.15); }

.form-body {
  padding-bottom: 35px; }

.form-body__top {
  margin-bottom: 40px; }

.form-footer {
  padding: 15px 0; }
  .form-footer.align-center {
    text-align: center; }

.phone-title {
  margin: 10px 0;
  font-family: 'Futura New Demi';
  font-size: 24px; }

.input-error {
  margin-top: 5px;
  padding: 12px;
  border-radius: 2px;
  background-color: rgba(0, 0, 0, 0.7);
  color: #fff;
  font-size: 14px; }

.icon-phone {
  width: 40px;
  height: 40px;
  margin-bottom: 15px;
  background: url("../img/svg/t.svg") no-repeat; }

.icon-password {
  width: 92px;
  height: 32px;
  margin-bottom: 15px;
  background: url("../img/svg/p.svg") no-repeat; }

.phone-input__code {
  position: absolute;
  z-index: 10;
  top: 0;
  left: 11px;
  width: 30px;
  font-size: 18px;
  line-height: 40px;
  color: #000; }

.form-control-phone {
  padding-left: 45px; }

header {
  background-color: #009685;
  color: #fff; }

.header-inner {
  position: relative;
  z-index: 10;
  max-width: 770px;
  margin: 0 auto;
  padding: 17px 25px; }

.header-top:before, .header-top:after {
  content: " ";
  display: table; }

.header-top:after {
  clear: both; }

.header-logo {
  width: 50px;
  height: 35px;
  float: left; }
  .header-logo img {
    max-width: 100%; }
  @media (min-width: 520px) {
    .header-logo {
      width: 315px;
      height: 55px; } }

.header-btn {
  width: 24px;
  height: 15px;
  margin-top: 12px;
  float: right;
  -webkit-transform: rotate(0deg);
  -ms-transform: rotate(0deg);
  transform: rotate(0deg);
  cursor: pointer; }
  .header-btn i {
    display: block;
    height: 1px;
    background-color: #fff;
    -webkit-transform: rotate(0deg) translate(0, 0);
    -ms-transform: rotate(0deg) translate(0, 0);
    transform: rotate(0deg) translate(0, 0);
    -webkit-transform-origin: left center;
    -ms-transform-origin: left center;
    transform-origin: left center;
    transition: .25s ease-in-out; }
    .header-btn i:first-child {
      margin-bottom: 7px; }
  .header-btn.is-open i:first-child {
    -webkit-transform: rotate(45deg) translate(2px, -4px);
    -ms-transform: rotate(45deg) translate(2px, -4px);
    transform: rotate(45deg) translate(2px, -4px); }
  .header-btn.is-open i:last-child {
    -webkit-transform: rotate(-45deg) translate(-3px, 8px);
    -ms-transform: rotate(-45deg) translate(-3px, 8px);
    transform: rotate(-45deg) translate(-3px, 8px); }
  @media (min-width: 520px) {
    .header-btn {
      display: none; } }

.header-bottom {
  padding-top: 35px; }
  @media (min-width: 520px) {
    .header-bottom {
      display: none; } }

.header-breadcrumbs {
  margin: 0;
  padding: 0 5px;
  list-style: none; }
  .header-breadcrumbs li {
    margin-bottom: 5px; }
  @media (min-width: 520px) {
    .header-breadcrumbs {
      padding-top: 20px; }
      .header-breadcrumbs li {
        display: inline-block;
        margin: 0 35px 10px 0; }
        .header-breadcrumbs li:last-child {
          margin-right: 0; } }
  @media (min-width: 520px) {
    .header-breadcrumbs {
      padding: 0; } }

.breadcrumbs-link {
  font-family: "Futura New Demi";
  font-size: 24px;
  text-decoration: none;
  color: rgba(255, 255, 255, 0.7);
  transition: color .2s linear; }
  .breadcrumbs-link.active {
    color: #fff; }
  .breadcrumbs-link:hover {
    color: #fff; }

.nav {
  position: absolute;
  z-index: 100;
  top: 87px;
  left: 0;
  display: none;
  width: 100%;
  padding: 0 20px;
  background-color: #009685; }
  @media (min-width: 520px) {
    .nav {
      position: relative;
      top: 0;
      display: block !important;
      padding: 35px 0 10px 0; } }

.header-nav {
  margin: 30px 0 0 0;
  padding: 10px 5px;
  list-style: none;
  border-top: 1px solid rgba(255, 255, 255, 0.15); }
  .header-nav li {
    margin-bottom: 3px; }
    .header-nav li:last-child {
      margin-top: 25px; }
  @media (min-width: 520px) {
    .header-nav {
      display: none; } }

.nav-link {
  font-size: 14px;
  color: rgba(255, 255, 255, 0.7);
  text-decoration: none; }

.link-out {
  display: block;
  margin-top: 15px;
  float: right;
  font-size: 14px;
  color: rgba(255, 255, 255, 0.7);
  text-decoration: none;
  transition: color .2s linear; }
  .link-out:hover {
    color: #fff; }

.nn-logo-link {
  display: block;
  width: 80px;
  height: 60px;
  margin-bottom: 55px; }

.nn-logo {
  width: 100%; }

#wrapper {
  position: relative;
  z-index: 1;
  min-height: 100%;
  padding-bottom: 90px; }

.container {
  max-width: 770px;
  margin: 0 auto;
  padding: 40px 30px 10px 30px; }

.container--personal {
  padding: 60px 15px 10px 15px; }

.container--profile {
  padding: 60px 25px 10px 25px; }

.container--analysis {
  padding: 0; }

.body-container--left {
  position: absolute;
  z-index: 10;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%; }
  .body-container--left .container {
    position: absolute;
    z-index: 10;
    top: 50%;
    left: 50%;
    width: 100%;
    max-width: 350px;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%); }
  @media (min-width: 800px) {
    .body-container--left {
      width: 50%; } }

.body-container--right {
  display: none;
  position: absolute;
  z-index: 10;
  top: 0;
  right: 0;
  width: 50%;
  height: 100%;
  background: url("../img/bg.jpg") top left no-repeat;
  background-size: cover; }
  @media (min-width: 800px) {
    .body-container--right {
      display: block; } }

.nn-personal {
  margin-bottom: 25px;
  font-size: 14px;
  color: #000; }

.personal-name {
  font-family: 'Futura New Demi';
  font-size: 22px; }

.nn-profile {
  color: #000; }
  .nn-profile:before, .nn-profile:after {
    content: " ";
    display: table; }
  .nn-profile:after {
    clear: both; }

@media (min-width: 800px) {
  .profile-content {
    width: 65%;
    float: left; } }

.profile-title {
  margin-bottom: 10px;
  font-family: 'Futura New Demi';
  font-size: 22px; }

.profile-name {
  margin-bottom: 20px;
  font-family: 'Futura New Demi';
  font-size: 22px; }

.profile-text {
  font-size: 18px; }

.profile-info {
  margin-bottom: 35px; }

.profile-info__item {
  margin-bottom: 25px; }

.profile-info__title {
  font-size: 14px;
  color: #95989a; }

.profile-info__value {
  font-family: 'Futura New Demi';
  font-size: 22px; }

.list-profile {
  font-size: 14px; }
  .list-profile li {
    margin-bottom: 15px; }
  @media (min-width: 800px) {
    .list-profile {
      width: 30%;
      float: right; } }

.profile-link {
  color: #009685;
  text-decoration: none; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
